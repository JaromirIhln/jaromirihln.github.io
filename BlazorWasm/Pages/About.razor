@page "/about"
@inject HttpClient Http

<PageTitle>About</PageTitle>

<h3 class="text-center markdown p-3" tabindex="0">About</h3>
<div id="h-image" class="hero-image" tabindex="1">
    <img src="/images/lucky_jump_w.webp" class="hero-image opacity-0" alt="Hero Image" tabindex="2" />
    <div id="h-text" class="hero-text">
        <h2 class="font-change">Vývoj v ASP.NET Core <span class="fa fa-film"> </span> </h2>
        <p>
            Architektura pro vývoj multiplatformních aplikací a rozhraní API, MVC &#40;Model-View-Controller&#41; a
            moderních cloudových aplikací.
        </p>
        <button id="hero-btn" class="fw-semibold border border-1 border-info" tabindex="3">
            <a href="https://learn.microsoft.com/cs-cz/aspnet/core/introduction-to-aspnet-core?view=aspnetcore-9.0"
               class="a-in-btn fa fa-windows" target="_blank"> Zjistit více...?</a>
        </button>
    </div>
</div>
@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}
else if (posts == null)
{
    <p>Načítám data...</p>
}
else
{
    <div class="row">
        @foreach (var post in posts)
        {
            <div class="col-md-4 mb-3" tabindex="@posts.IndexOf(post)">
                <h2 class="title-0 p-md-1 text-center text-bg-dark">@post.Title</h2>
                <p class="post-0 p-md-1 text-center text-bg-light">@((MarkupString)(post?.Content ?? ""))</p>
            </div>
        }
    </div>
}

<div class="footer-about text-bg-dark" tabindex="7">
    <p class="p-2"> © 2025 Copyright <span class="fa fa-refresh"> </span>
            <a class="text-reset fw-bold" href="https://github.com/JaromirIhln"> Jaromir Ihln - Github</a></p>
    <p class="fa fa-windows" tabindex="9">Ukázka použití ASP.NET Core Blazor WebAssembly.</p>
</div>

@code {
    protected override void OnInitialized()
    {
        base.OnInitialized();
        // Initialize any data or services needed for the component
    }
  private List<Post>? posts;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var data = await Http.GetFromJsonAsync<PostsRoot>("json/about.json");
            posts = data?.Posts;
        }
        catch
        {
            errorMessage = "Nepodařilo se načíst data.";
        }
    }
    public class Post
    {
        public string? Title { get; set; }
        public string? Content { get; set; }
    }

    public class PostsRoot
    {
        public List<Post>? Posts { get; set; }
    }
}